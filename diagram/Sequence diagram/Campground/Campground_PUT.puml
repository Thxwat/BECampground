@startuml Manage Campground (PUT)

header Campground Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Campground (PUT)"

actor "User" as user
actor "Admin" as admin
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:campgrounds" as routerCampgrounds
participant "<<middleware>>\n:auth" as middlewareAuth
participant "<<model>>\n:User" as modelUser
participant "<<controllers>>\n:campgrounds" as controllersCampgrounds
participant "<<model>>\n:Campground" as modelCampground
database "<<MongoDB>>\n:campgrounds" as CampgroundsDatabase
database "<<MongoDB>>\n:users" as UsersDatabase

admin->server ++:req.put('/campgrounds/:id')
server->routerCampgrounds ++:app.use('/campgrounds',campgrounds)
routerCampgrounds -> middlewareAuth ++:protect(token)
middlewareAuth -> modelUser ++:findById(decode.id)
modelUser -> UsersDatabase ++:findById(decode.id)
UsersDatabase --> modelUser --:user
modelUser --> middlewareAuth --:user
middlewareAuth --> routerCampgrounds --:next()
routerCampgrounds -> middlewareAuth ++:authorize("admin")
middlewareAuth --> routerCampgrounds --:next()
routerCampgrounds -> controllersCampgrounds ++:updateCampground()
controllersCampgrounds->modelCampground ++:findByIdAndUpdate(req.params.id,req.body)
modelCampground ->CampgroundsDatabase ++:CampgroundSchema
CampgroundsDatabase --> modelCampground --:campground
controllersCampgrounds <-- modelCampground --:campground
controllersCampgrounds->admin --:response

@enduml
